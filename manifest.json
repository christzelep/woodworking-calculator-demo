const CACHE_NAME = 'images-app-v1';
const urlsToCache = [ 
'/', 
'/index.html', 
'/blue_circle.svg', 
'/green_square.svg', 
'/manifest.json'
];

// Install service worker and cache assets
self.addEventListener('install', event => { 
event.waitUntil( 
caches.open(CACHE_NAME) 
.then(cache => cache.addAll(urlsToCache)) 
.then(() => self.skipWaiting()) 
);
});

// Serve cached content when offline
self.addEventListener('fetch', event => { 
event.respondWith( 
caches.match(event.request) 
.then(response => response || fetch(event.request)) 
);
});

// Clean up old caches
self.addEventListener('activate', event => { 
event.waitUntil( 
caches.keys().then(cacheNames => { 
return Promise.all( 
cacheNames.filter(name => name !== CACHE_NAME) 
.map(name => caches.delete(name)) 
); 
}) 
);
});
{
  "name": "My App",
  "short_name": "App",
  "start_url": "/index.html",  // Προσθήκη start_url
  "display": "standalone",
  "icons": [
    {
      "src": "blue_circle.svg",
      "sizes": "192x192",
      "type": "image/svg+xml"
    }
  ]
}
